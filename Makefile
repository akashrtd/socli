# Makefile for building SOCLI for multiple platforms\n\n# Project name and version\nPROJECT_NAME := socli\nVERSION ?= 0.1.0\n\n# Output directory for builds\nBUILD_DIR := bin\n\n# Supported platforms and architectures\nPLATFORMS := linux-amd64 linux-arm64 darwin-amd64 darwin-arm64 windows-amd64\n\n# Default target\n.PHONY: all\nall: clean build-all\n\n# Clean build artifacts\n.PHONY: clean\nclean:\n\t@echo \"Cleaning build directory...\"\n\t@rm -rf $(BUILD_DIR)\n\n# Build for all platforms\n.PHONY: build-all\nbuild-all:\n\t@echo \"Building $(PROJECT_NAME) $(VERSION) for all platforms...\"\n\t@mkdir -p $(BUILD_DIR)/$(VERSION)\n\t@$(foreach PLATFORM, $(PLATFORMS), \\\n\t\t$(MAKE) build-$(PLATFORM) || exit 1; \\\n\t)\n\n# Individual platform build targets\n.PHONY: build-linux-amd64\nbuild-linux-amd64:\n\t@echo \"Building for linux/amd64...\"\n\t@GOOS=linux GOARCH=amd64 go build -o $(BUILD_DIR)/$(VERSION)/$(PROJECT_NAME)-linux-amd64 -ldflags=\"-X 'main.Version=$(VERSION)'\" .\n\n.PHONY: build-linux-arm64\nbuild-linux-arm64:\n\t@echo \"Building for linux/arm64...\"\n\t@GOOS=linux GOARCH=arm64 go build -o $(BUILD_DIR)/$(VERSION)/$(PROJECT_NAME)-linux-arm64 -ldflags=\"-X 'main.Version=$(VERSION)'\" .\n\n.PHONY: build-darwin-amd64\nbuild-darwin-amd64:\n\t@echo \"Building for darwin/amd64...\"\n\t@GOOS=darwin GOARCH=amd64 go build -o $(BUILD_DIR)/$(VERSION)/$(PROJECT_NAME)-darwin-amd64 -ldflags=\"-X 'main.Version=$(VERSION)'\" .\n\n.PHONY: build-darwin-arm64\nbuild-darwin-arm64:\n\t@echo \"Building for darwin/arm64...\"\n\t@GOOS=darwin GOARCH=arm64 go build -o $(BUILD_DIR)/$(VERSION)/$(PROJECT_NAME)-darwin-arm64 -ldflags=\"-X 'main.Version=$(VERSION)'\" .\n\n.PHONY: build-windows-amd64\nbuild-windows-amd64:\n\t@echo \"Building for windows/amd64...\"\n\t@GOOS=windows GOARCH=amd64 go build -o $(BUILD_DIR)/$(VERSION)/$(PROJECT_NAME)-windows-amd64.exe -ldflags=\"-X 'main.Version=$(VERSION)'\" .\n\n# Convenience target to build for the current platform\n.PHONY: build\nbuild:\n\t@echo \"Building $(PROJECT_NAME) $(VERSION) for current platform...\"\n\t@go build -o $(BUILD_DIR)/$(PROJECT_NAME) -ldflags=\"-X 'main.Version=$(VERSION)'\" .\n\n# List available targets\n.PHONY: help\nhelp:\n\t@echo \"Available targets:\"\n\t@echo \"  all          - Clean and build for all platforms\"\n\t@echo \"  clean        - Remove build artifacts\"\n\t@echo \"  build-all    - Build for all platforms\"\n\t@echo \"  build        - Build for current platform\"\n\t@echo \"  build-<plat> - Build for a specific platform/arch (e.g., build-linux-amd64)\"\n\t@echo \"  help         - Show this help message\"\n\t@echo \"\"\n\t@echo \"Supported platforms:\"\n\t@echo \"  $(PLATFORMS)\"\n\t@echo \"\"\n\t@echo \"Version: $(VERSION)\"\n\t@echo \"Build directory: $(BUILD_DIR)/$(VERSION)"